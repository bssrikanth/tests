include tests-shared.cfg
only (image_backend=filesystem)
only no_9p_export
only no_virtio_rng
only smallpages
only default_bios
only bridge
only smp2
only qcow2
only no_pci_assignable
no multi_host
no ide,xenblk,lsi_scsi,ahci,sd
no qed,qcow2v3,raw_dd,vmdk, usb2
no e1000-82540em,e1000-82545em,e1000-82544gc,xennet,nic_custom
auto_cpu_model = "yes"
#cpu_model = "EPYC-v4"
#cpu_model = "host"
no i440fx
kill_vm = yes
enable_kvm =yes
avocado_vt_repo="https://github.com/bssrikanth/avocado-vt.git"
avocado_vt_repo_branch="upstream1212"
test_timeout=24400
avocado_guest_reinstall=yes
start_vm = yes
kill_vm = yes
usb_controller = xhci
usb_type = qemu-xhci
usb_type_usb1 = qemu-xhci
restore_image_after_testing=yes
backup_image_before_test = yes
only q35
only virtio_net
shutdown_method = shell
guest_dmesg_level = 2
shell_client=ssh
virtio_dev_iommu_platform=on
virtio_dev_disable_legacy=on
bridge=virbr0
nic_mode=tap
restore_image_after_test=yes
main_vm = vm1
vm_create_timeout = 720
kill_timeout=720
login_timeout=720
#extra_params="-object sev-guest,id=sev0,cbitpos=51,reduced-phys-bits=1"
#machine_type_extra_params = "confidential-guest-support=sev0,vmport=off"
vm_secure_guest_type = sev
vm_sev_cbitpos = 51
vm_sev_reduced_phys_bits = 1
vm_sev_policy = 3
nic_romfile = EMPTY_STRING
display = nographic

variants:
    - qemu_sanity:
       variants:
            - stress_boot_single:
                only io-github-autotest-qemu.boot
                vms = vm1
                no fullboot.virtioblk,kernelboot.virtioblk
            - stress_boot_multivm:
                only io-github-autotest-qemu.boot
                vms="vm1 vm2 vm3 vm4 vm5 vm6 vm7 vm8 vm9 vm10"
                sysprep_required = yes
                only min_config
                no fullboot,kernelboot.virtioblk
                master_images_clone = image1
                clone_master = yes
                remove_image_image1 = yes
                no with_host_phys
                only ovmfcodevars
            - shutdown:
                only io-github-autotest-qemu.shutdown
                vms = vm1
                shutdown_count=100
                no fullboot,kernelboot.virtioblk
                no with_host_phys
                only ovmfcodevars
            - reboot:
                only io-github-autotest-qemu.reboot
                vms = vm1
                reboot_count=100
                no fullboot,kernelboot.virtioblk
                no with_host_phys
                only ovmfcodevars

variants:
    - kernelboot:
       kernel=build_home/VT_BUILD/guest_kernel/arch/x86_64/boot/bzImage
       only 22.04-server.x86_64
       variants:
            - virtioblk:
                only virtio_blk
                no virtio_scsi
                kernel_params='root=/dev/vda rw console=ttyS0 net.ifnames=0 biosdevname=0 movable_node swiotlb=65536'
            - virtioscsi:
                only virtio_scsi
                no virtio_blk
                kernel_params='root=/dev/sda rw console=ttyS0 net.ifnames=0 biosdevname=0 movable_node swiotlb=65536'
    - fullboot:
       only 22.04-serverfull.x86_64
       variants:
            - virtioblk:
                only virtio_blk
                no virtio_scsi
            - virtioscsi:
                only virtio_scsi
                no virtio_blk

variants:
    - max_config:
       mem = 239872
       smp = 255
       vcpu_cores = 255
       vcpu_threads = 1
       vcpu_sockets = 1
    - min_config:
       mem = 23808
       smp = 1
       vcpu_cores = 1
       vcpu_threads = 1
       vcpu_sockets = 1
variants:
    - default:
    - with_host_phys:
       cpu_model_flags = ",host-phys-bits=true"
variants:
    - ovmf:
       extra_params += " -drive if=pflash,format=raw,unit=0,file=build_home/VT_BUILD/usr/local/share/qemu/OVMF_X64/OVMF.fd,readonly "
    - ovmfcode:
       extra_params += " -drive if=pflash,format=raw,unit=0,file=build_home/VT_BUILD/usr/local/share/qemu/OVMF_X64/OVMF_CODE.fd,readonly "
    - ovmfcodevars:
       ovmf_path = build_home/VT_BUILD/usr/local/share/qemu/OVMF_X64/
       ovmf_code_filename = OVMF_CODE.fd
       ovmf_vars_filename = OVMF_VARS.fd
       restore_ovmf_vars = yes
