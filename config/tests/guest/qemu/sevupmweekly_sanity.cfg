# Tweaked for dellj
include tests-shared.cfg
# Required Global Configurations
only (image_backend=filesystem)
only no_9p_export
only no_virtio_rng
only smallpages
only default_bios
only bridge
only smp2
only qcow2
only no_pci_assignable
no multi_host
no ide,xenblk,lsi_scsi,ahci,sd
no qed,qcow2v3,raw_dd,vmdk, usb2
no e1000-82540em,e1000-82545em,e1000-82544gc,xennet,nic_custom
#cpu_model = "EPYC-v4"
#cpu_model = "host"
auto_cpu_model = "yes"
cpu_model_flags = ",+svm,+x2apic"
no i440fx
kill_vm = yes
enable_kvm =yes
avocado_vt_repo="https://github.com/bssrikanth/avocado-vt.git"
avocado_vt_repo_branch="nested_images"
test_timeout=30000
avocado_guest_reinstall=yes
start_vm = yes
kill_vm = yes
usb_controller = xhci
usb_type = qemu-xhci
usb_type_usb1 = qemu-xhci
restore_image_after_testing=yes
backup_image_before_test = yes
# --- Platform ---
only q35
# --- Block devices ---
# --- Net devices ---
only virtio_net
# --- Misc ---
shutdown_method = shell
guest_dmesg_level = 2
shell_client=ssh
virtio_dev_iommu_platform=on
virtio_dev_disable_legacy=on
bridge=virbr0
nic_mode=tap
restore_image_after_test=yes
vm_create_timeout = 720

#Test
variants:
    - qemu_sanity:
       variants:
            - shutdown:
                only io-github-autotest-qemu.shutdown
                shutdown_count=10
                no multivm
                no virtioscsi
            - reboot:
                only io-github-autotest-qemu.reboot
                reboot_count=25
                no virtioscsi
                only ovmfcodevars
                no sevupm #currently has bug reported at https://confluence.amd.com/display/ALK/VT+UPM+issues+and+status
#            - transhuge:
#               only io-github-autotest-qemu.trans_hugepage
#               no trans_hugepage.relocated,trans_hugepage.migration,trans_hugepage.defrag,trans_hugepage.swapping
#               mem = 2048
#               no virtioscsi
#               no multivm
            - memhotplug:
               only hotplug_mem_simple,hotplug_mem_stress_ng
               guest_numa_nodes="node0"
               maxmem_mem=32G
               numa_memdev_node0=mem-mem0
               slots_mem=1
               mem_devs="mem0"
               use_mem_mem0=no
               size_mem_mem0=16384M
               mem_fixed=16384
               backend_mem=memory-backend-ram
               size_mem_plug1=8G
               stress_args='--cpu 12 --vm 20 --vm-bytes 1024M'
               stress_ng_args = "--page-in -r 4 -t 300s"
               stress_ng_args += ";--malloc 0 -t 300s"
               stress_ng_args += ";--mmap 0 -t 300s"
               stress_ng_args += ";--cpu 0 -l 95 --vm 0 --vm-bytes 80% --iomix 0 --iomix-bytes 80% --memcpy 2 --cache-prefetch -t 300s"
               no multivm
               no virtioscsi
               only ovmfcodevars
               no sevupm #currently not enabled
            - memhotplug_repeat:
               only hotplug_memory_repeat.repeat_256,hotplug_memory_repeat.scalability_test
               repeat_times=64
               no multivm
               no virtioscsi
               only ovmfcodevars
               no sevupm #currently not enabled
            - memhotplug_negative:
               only hotplug_mem_negative
               maxmem_mem=950G
               no multivm
               no virtioscsi
               only ovmfcodevars
               no sevupm #currently not enabled
            - cpuhotplug:
                only cpu_device_hotpluggable..single_vcpu.with_reboot.shell_reboot,cpu_device_hotpluggable..multi_vcpu.with_reboot.shell_reboot
                qemu_sandbox=none
                maxcpus=288
                no multivm,min_config
                no virtioscsi
                only ovmfcodevars
            - stressapptest:
                only io-github-autotest-qemu.linux_stress.stressapptest
                stress_shell_timeout = 1200
                stress_wait_for_timeout = 360
                stress_duration = 360
                stress_cmds_stressapptest = "stressapptest"
                make_cmds_stressapptest = "./configure && make && make install"
                uninstall_cmds_stressapptest = "./configure && make && make uninstall"
                download_url_stressapptest = "https://github.com/stressapptest/stressapptest.git"
                download_type_stressapptest = "git"
                stressapptest_args = "-M 6717 -s 360 -W -m 32"
                only ovmfcodevars
            - kernbench:
                only io-github-autotest-qemu.avocado_guest.kernbench
                avocadotestrepo=http://jenkinsworker.amd.com/git/avocado-misc-tests
                avocadomux=kernel/kernbench.py.data/kernbench_maxthread_5iterations.yaml
                avocadoinstalltype="pip"
                no multivm
                only ovmfcodevars
            - suspendresume:
                only qmp_command.qmp_cont,balloon_stop_continue
                no multivm
                no virtioscsi
                only ovmfcodevars
            - file_transfer:
                only io-github-autotest-qemu.file_transfer.default_setting
                no multivm
                only ovmfcodevars
            - net_jumbo:
                only io-github-autotest-qemu.jumbo
                no multivm
                no virtioblk
                only ovmfcodevars
            - qemu_img:
                only io-github-autotest-qemu.qemu_img.commit
                no multivm
                only ovmfcodevars
            - qemu_ioquit:
                only io-github-autotest-qemu.ioquit
                no multivm
                no virtioscsi
                only ovmfcodevars

variants:
    - virtioblk:
       only virtio_blk
       no virtio_scsi
       kernel_params='root=/dev/vda rw console=ttyS0 net.ifnames=0 biosdevname=0 movable_node swiotlb=65536'
    - virtioscsi:
       only virtio_scsi
       no virtio_blk
       kernel_params='root=/dev/sda rw console=ttyS0 net.ifnames=0 biosdevname=0 movable_node swiotlb=65536'
variants:
    - sevupm:
       variants:
            - withkernelhash:
                extra_params=" -object sev-guest,id=sev0,cbitpos=51,reduced-phys-bits=1,discard=both,kernel-hashes=on "
                machine_type_extra_params = "confidential-guest-support=sev0,memory-backend=ram1,kvm-type=protected"
                only OVMF_AmdSev
            - withoutkernelhash:
                extra_params=" -object sev-guest,id=sev0,cbitpos=51,reduced-phys-bits=1,discard=both "
                machine_type_extra_params = "confidential-guest-support=sev0,memory-backend=ram1,kvm-type=protected"
    - sevnonupm:
       variants:
            - withkernelhash:
                extra_params=" -object sev-guest,id=sev0,cbitpos=51,reduced-phys-bits=1,kernel-hashes=on "
                machine_type_extra_params = "confidential-guest-support=sev0"
                only OVMF_AmdSev
            - withoutkernelhash:
                extra_params=" -object sev-guest,id=sev0,cbitpos=51,reduced-phys-bits=1 "
                machine_type_extra_params = "confidential-guest-support=sev0"
variants:
    - maxconfig:
       main_vm = vm1
       vms = vm1
       mem = 484352
       smp = 255
       vcpu_cores = 255
       vcpu_threads = 1
       vcpu_sockets = 1
       extra_params += " -object memory-backend-memfd-private,id=ram1,share=true,size=484352M "
    - multivm:
       mem = 19200
       smp = 255
       vcpu_cores = 255
       vcpu_threads = 1
       vcpu_sockets = 1
       main_vm = vm1
       vms = vm1 vm2 vm3 vm4 vm5 vm6 vm7 vm8 vm9 vm10 vm11 vm12 vm13 vm14 vm15 vm16 vm17 vm18 vm19 vm20 vm21 vm22 vm23 vm24 vm25
       sysprep_required = yes
       master_images_clone = image1
       clone_master = yes
       remove_image_image1 = yes
       extra_params += " -object memory-backend-memfd-private,id=ram1,share=true,size=19200M "
    - min_config:
       mem = 24000
       smp = 1
       vcpu_cores = 1
       vcpu_threads = 1
       vcpu_sockets = 1
       extra_params += " -object memory-backend-memfd-private,id=ram1,share=true,size=24000M "

variants:
    - OVMF_X64:
       variants:
            - ovmf:
                extra_params += " -drive if=pflash,format=raw,unit=0,file=build_home/VT_BUILD/usr/local/share/qemu/OVMF_X64/OVMF.fd,readonly "
            - ovmfcodevars:
                ovmf_path = build_home/VT_BUILD/usr/local/share/qemu/OVMF_X64/
                ovmf_code_filename = OVMF_CODE.fd
                ovmf_vars_filename = OVMF_VARS.fd
                restore_ovmf_vars = yes
            - ovmfcode:
                extra_params += " -drive if=pflash,format=raw,unit=0,file=build_home/VT_BUILD/usr/local/share/qemu/OVMF_X64/OVMF_CODE.fd,readonly "
    - OVMF_Ia3264:
       variants:
            - ovmf:
                extra_params += " -drive if=pflash,format=raw,unit=0,file=build_home/VT_BUILD/usr/local/share/qemu/OVMF_Ia3264/OVMF.fd,readonly "
            - ovmfcodevars:
                ovmf_path = build_home/VT_BUILD/usr/local/share/qemu/OVMF_Ia3264/
                ovmf_code_filename = OVMF_CODE.fd
                ovmf_vars_filename = OVMF_VARS.fd
                restore_ovmf_vars = yes
            - ovmfcode:
                extra_params += " -drive if=pflash,format=raw,unit=0,file=build_home/VT_BUILD/usr/local/share/qemu/OVMF_Ia3264/OVMF_CODE.fd,readonly "
    - OVMF_AmdSev:
       variants:
            - ovmf:
                extra_params += " -drive if=pflash,format=raw,unit=0,file=build_home/VT_BUILD/usr/local/share/qemu/OVMF_AMDSEV/OVMF.fd,readonly "
